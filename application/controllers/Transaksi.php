<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Transaksi extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->database();
        $this->load->model('Transaksi_model');
    } 

    /*
     * Listing of transaksi
     */
    public function index()

    {
        $data['title']='listtransaksi';
        $data['page']='index';
        $data['Transaksi'] = $this->Transaksi_model->get_all_transaksi();
        
        $data['_view'] = 'transaksi/index';
        $this->rendertransaksi($data);
    }



    /*
     * Adding a new transaksi
     */
    public function add()
    {   
        $data['title']='listtransaksi';
        $data['page']='add';
        $this->rendertransaksi ($data);

        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'id_transaksi' => $this->input->post('id_transaksi'),
				'nisn' => $this->input->post('nisn'),
				'tgl_transaksi' => $this->input->post('tgl_transaksi'),
				'nominal' => $this->input->post('nominal'),
            );
            
            $transaksi_id = $this->Transaksi_model->add_transaksi($params);
            redirect('Transaksi/index');
        }
        else
        {            
            // $data['_view'] = 'antrian/add';
            // $this->load->view('layouts/main',$data);
        }
    } 

    // public function update($id_pembayaran)
    //  {
    //        $data['Pembayaran'] = $this->Pembayaran_model->get_pembayaran($id_pembayaran);
    //        // $data['title']='listbayar';
    //        $data['page']='edit';
    //        $this->renderpembayaran($data);
    //      # code...
    //  } 

    /*
     * Editing a transaksi
     */
    public function edit()

    {   
           
           // $data['_view'] = 'Pembayaran/edit'; 
        // check if the antrian exists before trying to edit it
          $data['title']='listtransaksi';
          $data['page']='edit';
           $this->rendertransaksi($data);
        
        if(isset($data['Transaksi']['id_transaksi']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'id_transaksi' => $this->input->post('id_transaksi'),
                    'nisn' => $this->input->post('nisn'),
                    'tgl_transaksi' => $this->input->post('tgl_transaksi'),
                    'nominal' => $this->input->post('nominal'),
                );

                $this->Transaksi_model->update_transaksi($id_transaksi,$params);            
                redirect('Transaksi/index');
            }
          
        }
        else
            show_error('The Transaksi you are trying to edit does not exist.');
    } 

    /*
     * Deleting antrian
     */
    public function remove($id_transaksi)
    {
        // $antrian = $this->Pembayaran_model->get_pembayaran($id_pembayaran);

        // if(isset($pembayaran['id_pembayaran']))
        // {
        //     $this->Pembayaran_model->delete_pembayaran($id_pembayaran);
        //     redirect('Pembayaran/index');
        // }
        // else
        //     show_error('The Pembayaran you are trying to delete does not exist.');
        // }

        $this->Transaksi_model->delete_transaksi($id_transaksi);
        redirect('transaksi/index');
}

    public function rendertransaksi($data){
        $this->load->view('SPP/header');
        $this->load->view('SPP/maincontent',$data);

        $this->load->view('SPP/footer');
    }


}
